install.packages("markdown")
install.packages("rmarkdown")
require("rmarkdown")
install.packages("pwr")
require(pwr)
install.packages("ggplot2")
pt=pwr.t.test(n = , d = , sig.level = , power = , type = c("two.sample", "one.sample", "paired"))
ha = seq(95, 125, l = 100)
pwrTest = pwr.norm.test(d = d, n = 20, sig.level = 0.05, alternative = "greater")$power
sigma = 1
h0 = 100
ha = 105
d = (ha - h0)/sigma
ha = seq(95, 125, l = 100)
pwrTest = pwr.norm.test(d = d, n = 20, sig.level = 0.05, alternative = "greater")$power
plot(d, pwrTest, type = "l", ylim = c(0, 1))
powerplot(d, pwrTest, type = "l", ylim = c(0, 1))
pwrTest = pwr.norm.test(d = d, n = 20, sig.level = 0.05, alternative = "greater")$power
plot(d, pwrTest, type = "l", ylim = c(0, 1))
install.packages("samplesize")
require(samplesize)
szt=n.ttest(power = 0.8, alpha = 0.05, mean.diff = 0.80, sd1 = 0.83, k = 1,
design = "unpaired", fraction = "balanced", variance = "equal")
szt
library(foreign)
inFile='Z:\Ponnis PPA model output\premium pattern\data\cleaned inputs'
inFile='Z:/Ponnis PPA model output/premium pattern/data/cleaned inputs'
tbl <- read.ssd(inFile, "ahl_prm_2015_2",
sascmd="C:/Program Files/SASHome/SASFoundation/9.3")
library(Hmisc)
install.packages("Hmisc")
library(Hmisc)
library("Hmisc", lib.loc="C:/Program Files/R/R-3.3.1/library")
install.packages("stringi")
tbl <- sas.get(inFile, "ahl_prm_2015_2")
raw=list.files("Z:/Ponnis PPA model output/premium pattern/data/cleaned inputs")
raw
raw=list.files("Z:/Ponnis PPA model output/premium pattern/data/raw inputs")
attributes(raw)
A=23500+3400 # total starting debt balance
i= .12/12 #average interest across cc and car loan
P=1100 #amount paid each month
N=36 #total periods of loan
n=28 # total of periods gone by, debt down to $200 at this point as is
B_n = A*(1+i)^n -(P/i)*((1+i)^n -1)
savmay = 250*10
A=23500+3400 # total starting debt balance
i= .12/12 #average interest across cc and car loan
P=1100 #amount paid each month
N=36 #total periods of loan
n=6 # total of periods gone by, debt down to $200 at this point as is
B_n = A*(1+i)^n -(P/i)*((1+i)^n -1)
savmay = 250*12
A=23500+3400 # total starting debt balance
i= .12/12 #average interest across cc and car loan
P=1100 #amount paid each month
N=36 #total periods of loan
n=18 # total of periods gone by, debt down to $200 at this point as is
B_n = A*(1+i)^n -(P/i)*((1+i)^n -1)
savmay = 500*18
savmay = 500*
###savings first for after 28 months, then once debt is gone
sav28 = 500*28
sav36=sav28+(2200*8)
savmay = 500*
###savings first for after 28 months, then once debt is gone
sav28 = 500*28
savmay = 500*
###savings first for after 28 months, then once debt is gone
sav28 = 500*28
sav28 = 500*28
sav36=sav28+(2200*8)
sav48=sav28+((P+500)*20)
sav60=sav28+((P+500)*32)
fizz=1550
fizz=525
r2=1150/2
rav=300
rav+fizz+r2
1400+500
1900+200
2300*.05
2300*.10
1980*2
3960*.1
3960-500
1980-250
71+121+103+50+150
A=23500+3400 # total starting debt balance
i= .12/12 #average interest across cc and car loan
P=875 #amount paid each month
N=36 #total periods of loan
n=37 # total of periods gone by, debt down
B_n = A*(1+i)^n -(P/i)*((1+i)^n -1)
As=250000
Ps=1200
is=.06/12
ns=180
Stu = As*(1+is)^ns -(Ps/is)*((1+is)^ns -1)
12*3
8500+8000
A=36000 # total starting debt balance
i= .12/12 #average interest across cc and car loan
P=875 #amount paid each month
N=36 #total periods of loan
n=48 # total of periods gone by, debt down
B_n = A*(1+i)^n -(P/i)*((1+i)^n -1)
A=36000 # total starting debt balance
i= .12/12 #average interest across cc and car loan
P=875 #amount paid each month
N=36 #total periods of loan
n=52 # total of periods gone by, debt down
B_n = A*(1+i)^n -(P/i)*((1+i)^n -1)
A=36000 # total starting debt balance
i= .12/12 #average interest across cc and car loan
P=1100 #amount paid each month
N=36 #total periods of loan
n=48 # total of periods gone by, debt down
B_n = A*(1+i)^n -(P/i)*((1+i)^n -1)
A=36000 # total starting debt balance
i= .12/12 #average interest across cc and car loan
P=1100 #amount paid each month
N=34 #total periods of loan
n=48 # total of periods gone by, debt down
B_n = A*(1+i)^n -(P/i)*((1+i)^n -1)
A=36000 # total starting debt balance
i= .12/12 #average interest across cc and car loan
P=1100 #amount paid each month
N=34 #total periods of loan
n=42 # total of periods gone by, debt down
B_n = A*(1+i)^n -(P/i)*((1+i)^n -1)
A=36000 # total starting debt balance
i= .12/12 #average interest across cc and car loan
P=1100 #amount paid each month
N=34 #total periods of loan
n=40 # total of periods gone by, debt down
B_n = A*(1+i)^n -(P/i)*((1+i)^n -1)
40/12
As=160000
Ps=1200
is=.06/12
ns=180
Stu = As*(1+is)^ns -(Ps/is)*((1+is)^ns -1)
180/12
As=160000
Ps=1500
is=.06/12
ns=180
Stu = As*(1+is)^ns -(Ps/is)*((1+is)^ns -1)
As=160000
Ps=1300
is=.06/12
ns=180
Stu = As*(1+is)^ns -(Ps/is)*((1+is)^ns -1)
As=160000
Ps=1500
is=.06/12
ns=120
Stu = As*(1+is)^ns -(Ps/is)*((1+is)^ns -1)
As=160000
Ps=2000
is=.06/12
ns=120
Stu = As*(1+is)^ns -(Ps/is)*((1+is)^ns -1)
As=160000
Ps=2000
is=.06/12
ns=60
Stu = As*(1+is)^ns -(Ps/is)*((1+is)^ns -1)
As=160000
Ps=1200
is=.06/12
ns=120
Stu = As*(1+is)^ns -(Ps/is)*((1+is)^ns -1)
As=160000
Ps=1500
is=.06/12
ns=120
Stu = As*(1+is)^ns -(Ps/is)*((1+is)^ns -1)
As=160000
Ps=2000
is=.06/12
ns=120
Stu = As*(1+is)^ns -(Ps/is)*((1+is)^ns -1)
As=160000
Ps=1800
is=.06/12
ns=120
Stu = As*(1+is)^ns -(Ps/is)*((1+is)^ns -1)
As=160000
Ps=1600
is=.06/12
ns=120
Stu = As*(1+is)^ns -(Ps/is)*((1+is)^ns -1)
As=160000
Ps=1500
is=.06/12
ns=120
Stu = As*(1+is)^ns -(Ps/is)*((1+is)^ns -1)
As=160000
Ps=1200
is=.06/12
ns=120
Stu = As*(1+is)^ns -(Ps/is)*((1+is)^ns -1)
1500*120
180000/11
5*1000*12
5*2000*12
sav5=500*60
sav2=500*24
8.5+8
8.5+8.5
6411/12
library(RODBC)
install.packages("rodbc")
y
install.packages("RODBC")
library(RODBC)
dbhandle <- odbcDriverConnect('driver={SQL Server};server=10.50.6220;database=OS_Shared;trusted_connection=true')
dbhandle <- odbcDriverConnect('ISLHistory')
dbhandle <- odbcConnect('ISLHistory')
res <- sqlQuery(dbhandle, 'select * from information_schema.tables')
head(res)
ISL_data=sqlQuery(dbhandle, 'select(10) * from reporting isl history')
ISL_data=sqlQuery(dbhandle, 'select(10) * from reporting isl history.tables')
ISL_data=sqlQuery(dbhandle, 'select(10) * from reporting isl history.tables')
ISL_data=sqlQuery(dbhandle, 'select(10) * from reporting isl history')
odbcClose(dbhandle)
V = 1000
R = 0.03
FV1 = V*(1 + R)
FV5 = V*(1 + R)^5
FV10 = V*(1 + R)^10
18000/12
18000/26
18000/12
765-445
320+690
1250000/20
1250000/30
dbhandle <- odbcConnect('ISLHistory')
res <- sqlQuery(dbhandle, 'select * from information_schema.tables')##get tables in connection
head(res)
res <- sqlFetch(ch, "reporting isl history", max = 10)
res <- sqlFetch(dbhandle, "reporting isl history", max = 10)
ISL <- sqlFetch(dbhandle, "reporting isl history", max = 1000)
head(ISL)
ISL_prem=sqlFetch(dbhandle, 'select Accounting Date
,Policy Number
,Status Detail
,Accumulated Premium  * from reporting isl history where Accounting Date > ='2015-12-30''
alld=read.csv("C:/Users/aiqjo6/InforceOptimization/MGLeadGenerate/KBM data with Ratings.csv")
require(dplyr)
#write.csv(select(alld, Contract.Number),"C:/Users/aiqjo6/InforceOptimization/MGLeadGenerate/PN_MG.csv")
# Join to rx data ---------------------------------------------------------
rx=read.csv("C:/Users/aiqjo6/InforceOptimization/MGLeadGenerate/Rxdata2.csv")
require(stringi)
#create match column for policy number
rx$n1=as.character(str_trim(rx$POLICY_NBR))
alld$n1=as.character(str_trim(alld$Contract.Number))
tm=merge(alld, rx, by ="n1", all =T)
# Set drug NAs to zero  ----------------------------------------------------
tm$DRUG_PRIORITY_CODE_1[is.na(tm$DRUG_PRIORITY_CODE_1)]<-0
tm$DRUG_PRIORITY_CODE_2[is.na(tm$DRUG_PRIORITY_CODE_2)]<-0
tm$DRUG_PRIORITY_CODE_3[is.na(tm$DRUG_PRIORITY_CODE_3)]<-0
# Select  kbm and name vars ------------------------------------------------
require(dplyr)
md=select(tm, Contract.Number, NAME_STATE,CHANPR1 ,ZIP,AGE_RANGE, DESTGRP,FAMP,GENERS,HHCOMP,INSFINEX, INSPAFUN,IRIAUTO,ESTDEB30, ESTINV30,ESTINC30,
NAME_MARITAL, NAME_SEX, LTCINDX,FAMP,NETW30,MEDSUP,SSPIDENT,
ADV.Sub.Channel,Contract.Issue.Date,Product.Subgroup.Code,NAME_TOBACCO_RATING_N,INSURANCE_AGE,
DRUG_PRIORITY_CODE_1,DRUG_PRIORITY_CODE_2,DRUG_PRIORITY_CODE_3)
# Join to lab data --------------------------------------------------------
labs=read.csv("C:/Users/aiqjo6/InforceOptimization/MGLeadGenerate/labs.csv")
labs=labs[,1:2]
require(stringr)
#create match column for policy number
rx$n1=as.character(str_trim(rx$POLICY_NBR))
alld$n1=as.character(str_trim(alld$Contract.Number))
tm=merge(alld, rx, by ="n1", all =T)
tm$DRUG_PRIORITY_CODE_1[is.na(tm$DRUG_PRIORITY_CODE_1)]<-0
tm$DRUG_PRIORITY_CODE_2[is.na(tm$DRUG_PRIORITY_CODE_2)]<-0
tm$DRUG_PRIORITY_CODE_3[is.na(tm$DRUG_PRIORITY_CODE_3)]<-0
# Select  kbm and name vars ------------------------------------------------
require(dplyr)
md=select(tm, Contract.Number, NAME_STATE,CHANPR1 ,ZIP,AGE_RANGE, DESTGRP,FAMP,GENERS,HHCOMP,INSFINEX, INSPAFUN,IRIAUTO,ESTDEB30, ESTINV30,ESTINC30,
NAME_MARITAL, NAME_SEX, LTCINDX,FAMP,NETW30,MEDSUP,SSPIDENT,
ADV.Sub.Channel,Contract.Issue.Date,Product.Subgroup.Code,NAME_TOBACCO_RATING_N,INSURANCE_AGE,
DRUG_PRIORITY_CODE_1,DRUG_PRIORITY_CODE_2,DRUG_PRIORITY_CODE_3)
# Join to lab data --------------------------------------------------------
labs=read.csv("C:/Users/aiqjo6/InforceOptimization/MGLeadGenerate/labs.csv")
labs=labs[,1:2]
#flip so there is a column for each req id
require(tidyr)
library(dplyr)
#add urine, blood and aps1 + aps 2 column
labs2=mutate(labs,Urine=ifelse(labs$REQUIREMENT_ID=='URINE', 1,0))
labs2=mutate(labs2,Blood=ifelse(labs$REQUIREMENT_ID=='BLOOD', 1,0))
labs2=mutate(labs2,APS=ifelse(labs$REQUIREMENT_ID=='APS1', 1,ifelse(labs$REQUIREMENT_ID=='APS2',1,0)))
md$n1=as.character(str_trim(md$Contract.Number))
labs2$n1=as.character(str_trim(labs2$POLICY_NO))
mdl=merge(md, labs2[,2:6], by='n1',all.y = F)
head(labs2)
mdl=merge(md, labs2[,2:6], by='n1',all.x=T)
labs2=mutate(labs2,skim=ifelse(labs2$Urine=='0', 0,ifelse(labs2$Blood=='0',0,ifelse(labs2$APS =='0',0,1))))
summary(labs2$skim  )
labs2=mutate(labs2,skim=ifelse(labs2$Urine=='1', 1,ifelse(labs2$Blood=='1',1,ifelse(labs2$APS =='1',1,0))))
summary(labs2$skim  )
labs2=filter(labs2,skim==1)
head9labs2
head(labs2)
mdl=inner_join(md,labs2[,2:6], by=n1)
mdl=inner_join(md,labs2[,2:6], by='n1')
write.csv(md, "C:/Users/aiqjo6/InforceOptimization/MGLeadGenerate/KBM_risk_rx.csv")
md$m1=rep(1, 1:nrow(md))
md$m1=rep(1, nrow(md))
head(md)
mdl=merge(md, labs2[,2:6], by='n1',all=F)
mdll=filter(mdl,m1=1)
mdll=filter(mdl,m1==1)
summary(mdl)
mdu=unique(mdl)
mdl=left_join(md,labs2[,2:6], by='n1')
head(md)
head(labs2)
mdu=unique(mdl)
head(mdl)
head(mdu)
head(labs2)
str(labs2)
str(md)
labs2 =labs2[,2:6]
mdl=merge(md, labs2, by='n1',all=F)
rm(mdll)
rm(mdu)
mdl=merge(md, labs2, by='n1',all.x=T,all.y=F)
mdl=merge(md, labs2, by='n1',all=F)
mdu=unique(mdl)
mdl=merge(md, labs2, by='n1',all.y=FALSE)
write.csv(labs2,"C:/Users/aiqjo6/InforceOptimization/MGLeadGenerate/labs2_only.csv")
write.csv(md,"C:/Users/aiqjo6/InforceOptimization/MGLeadGenerate/md_only.csv")
unique(labs2$n1)
ul=unique(labs2$n1)
ul=length(unique(labs2$n1))
mul=length(unique(md$n1))
mul %in% ul
head(mdl)
summary(mdu$Product.Subgroup.Code)
27428+78+347762+180117+64940
ded=duplicated(mdu)
summary(ded)
ded=duplicated(mdu$Contract.Number)
summary(ded)
summary(mdu$APS)
count(mdu$APS)
head(mdu)
write.csv(mdu,"C:/Users/aiqjo6/InforceOptimization/MGLeadGenerate/mdu.csv")
mdu$code=ifelse(mdu$Product.Subgroup.Code=="MG","MG","NONMG")
write.csv(mdu,"C:/Users/aiqjo6/InforceOptimization/MGLeadGenerate/mdu.csv")
write.csv(mdu,"C:/Users/aiqjo6/InforceOptimization/MGLeadGenerate/mdu.csv", row.names = F)
t1=xtabs(~case,NAME_STATE,mdu)
names(mdu)
t1=transform(table(mdu))
t1=xtabs(~code,NAME_STATE,mdu)
require(MASS)
t1=xtabs(~code,NAME_STATE,mdu)
t1=table(mdu$Blood,mdu$code)
t1
summary(alld$Product.Subgroup.Code)
summary(mdu$code)
hist(mdu$code)
count(mdu$code)
count(mdu$Product.Subgroup.Code)
summary(mdu$Product.Subgroup.Code)
summary(mdl$Product.Subgroup.Code)
summary(labs2$Product.Subgroup.Code)
summary(md$Product.Subgroup.Code)
lm1=lm(NAME_TOBACCO_RATING_N~,data=md)
md1=select(md,-Contract.Issue.Date,-Contract.Number)
names(md)
require(dplyr)
md1=select(md,-Contract.Issue.Date,-Contract.Number)
require(dplyr)
md1=select(md,-Contract.Issue.Date,-Contract.Number)
md1=select(tm, NAME_STATE,CHANPR1 ,ZIP,AGE_RANGE, DESTGRP,FAMP,GENERS,HHCOMP,INSFINEX, INSPAFUN,IRIAUTO,ESTDEB30, ESTINV30,ESTINC30,
NAME_MARITAL, NAME_SEX, LTCINDX,FAMP,NETW30,MEDSUP,SSPIDENT,
ADV.Sub.Channel,Product.Subgroup.Code,NAME_TOBACCO_RATING_N,INSURANCE_AGE,
DRUG_PRIORITY_CODE_1,DRUG_PRIORITY_CODE_2,DRUG_PRIORITY_CODE_3)
library("dplyr", lib.loc="C:/Program Files/R/R-3.3.1/library")
md1=select(md,-Contract.Issue.Date,-Contract.Number)
md1=select(tm, NAME_STATE,CHANPR1 ,ZIP,AGE_RANGE, DESTGRP,FAMP,GENERS,HHCOMP,INSFINEX, INSPAFUN,IRIAUTO,ESTDEB30, ESTINV30,ESTINC30,
NAME_MARITAL, NAME_SEX, LTCINDX,FAMP,NETW30,MEDSUP,SSPIDENT,
ADV.Sub.Channel,Product.Subgroup.Code,NAME_TOBACCO_RATING_N,INSURANCE_AGE,
DRUG_PRIORITY_CODE_1,DRUG_PRIORITY_CODE_2,DRUG_PRIORITY_CODE_3)
alldf=read.csv("C:/Users/aiqjo6/InforceOptimization/MGLeadgenerate/KBM data with Ratings.csv")
aildata=read.csv("C:/Users/aiqjo6/InforceOptimization/MGLeadgenerate/ail_data.csv")
combdata=select(alldf, -AILMENTGROUP)
combdata=data.frame(combdata,aildata)
knitr::opts_chunk$set(cache=TRUE)
setwd("C:/StreamlinedUW/Model_ready_data")
knitr::opts_chunk$set(cache=TRUE)
setwd("C:/StreamlinedUW/StreamlinedUW/Model_ready_data")
modelpath='H:/MoneyGuard Cross Sell/model_ready_data'
setwd(modelpath)
df=read.csv(list.files(pattern = 'indata.csv'))
hoot=names(df)
gpn=read.csv('H:/MoneyGuard Cross Sell/Data/KBM data with Ratings')
gpn=read.csv('H:/MoneyGuard Cross Sell/Data/KBM data with Ratings.csv')
source("filtbyDate.R")
codein<-"H:/Rcode/Modeling_functions"
setwd(codein)
source("filtbyDate.R")
m1_d=filtbyDate(gpn,'Contract.Eff.Date',"%Y-%m-%d",'1/1/2008','12/31/2015')
head(m1_d$Contract.Number)
pn=dplyr::select(m1_d,Contract.Number)
md=dplyr::select(m1_d,one_of(hoot))
head(md)
head(df)
write.csv(pn,'H:/MoneyGuard Cross Sell/model_ready_data/pn.csv')
summary(gpn$Contract.Eff.Date)
